AC_INIT(configure.in)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(libaiml, 0.9.0)

AC_LANG_CPLUSPLUS
AC_PROG_CXX
AC_PROG_RANLIB
AM_PROG_LIBTOOL

## AC_ARG_WITH(v8_path,AS_HELP_STRING([--with-v8-path=/path/to/v8/],[root of v8 source]))

## COMPILE OPTIONS ##
AC_ARG_ENABLE(caiml,
  AC_HELP_STRING([--enable-caiml],[Enable CAIML writer/reader (see README)]),
  AC_DEFINE([ENABLE_CAIML], [1], [Enable compilation of CAIML writer/reader]))
AC_ARG_ENABLE(aisl,
  AC_HELP_STRING([--enable-aisl],[Enable AISL writer/reader (see README)]),
  AC_DEFINE([ENABLE_AISL], [1], [Enable compilation of AISL writer/reader]))
##AC_ARG_ENABLE(javascript,
##  AC_HELP_STRING([--enable-javascript],[Enable JavaScript API integration (see README)]),
##  AC_DEFINE([ENABLE_JAVASCRIPT], [1], [Enable JavaScript API integration]))
##AC_ARG_ENABLE(pcrecpp,
##  AC_HELP_STRING([--enable-pcrecpp],[Enable PCRE (c++ binding) support]),
##  AC_DEFINE([ENABLE_PCRECPP], [1], [Enable PCRE support]))
AC_ARG_ENABLE(werror,
  AC_HELP_STRING([--disable-werror],[Disable -Werror flag (warnings as errors)]),
  WERROR_CXXFLAG='', WERROR_CXXFLAG='-Werror')

## Checks for header files. ##
AC_CHECK_HEADERS([netinet/in.h])

## Flags
AC_SUBST([WERROR_CXXFLAG])

## Check for programs ##
AC_CHECK_PROG([has_xml2_config], [xml2-config], [yes], [no])
if test "$hast_xml2_config" == "no"; then
  AC_MSG_ERROR([libxml2 is needed to compile libaiml])
fi
XML2_LIBS=`xml2-config --libs`
AC_SUBST(XML2_LIBS)

## Checks for typedefs, structures, and compiler characteristics. ##
AC_CHECK_FUNCS([floor])
AC_FUNC_STRFTIME
AC_TYPE_SIZE_T

echo "Results:"
echo -ne "CAIML Support:\t\t"
if test "$enable_caiml" == "yes"; then echo "YES"; else echo "NO"; fi

AC_OUTPUT(Makefile src/Makefile test_app/aiml/Makefile test_app/Makefile util/Makefile libaiml.pc)
